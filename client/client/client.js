const original_log = console.log;
    const chat_window = document.getElementById("chatContent");
    const basemessage = `<div id="message" class="message">
    <img src="lios-flat.svg" style="width: 50px; height: auto; border-radius: 50px;">
    <p class="new" style="bottom: 55px; left: 5px;">&nbsp;&nbsp;text</p>
    <a href="attachmentlink" download="smth" style="display: none;">{attachment}</a>
    <!-- Defaults attachment to hidden. change in js-->
    <!-- should support discords like markdown. -->
    <!-- i know its usually generated by js. i wanted to make a simple base for you to go on so its a little easier for you :) -->
    </div>`;
    const send = document.getElementsByClassName("viewport_messenger").getElementById("send");
    const typervalue = document.getElementById('chattyper');
            // Get the input element by its ID
 
    /* can you check and/or fix my js pls */
    /*
    console.log = function (...data) {
      document.querySelector("#console").append(data.map(String).join("\n"));
      original_log(...data);
    };
    */
function changeval() {
  let message = document.getElementById("typer").value
};
/*YO YOUR FINALLY ALIVE i need SOOSOSOSOSO much help SOB where have u been? sorry i didnt notice you.
hello?, buddy are you ok?

*/
    
    function addNewMessage() {
      document.getElementById("chatContent").innerHTML += basemessage;
      document.getElementById("new").innerText.replace("text", message);
      document.getElementById("new").classList.replace("new", "old");
    };
    /*
    temporarily turned off server connection to get message system setup
    
    // When loaded, lets connect to the server
    addEventListener("load", () => {
      const messageContainer = document.querySelector("#message_container");
    
      class Client {
        constructor(api_url) {
          this.api = api_url;
          this.authenticated = false;
        }
    
        onOpen(event) {
          // Connection open, send information about us
          //setup collect and cache, collect first chats data and cache, constantly cache data when shown. idk if its
          //fast or not but it would work right?
    
          this.ws.send(
            JSON.stringify({
              // This should include information about the client, for authentication.
              name: "something",
            })
          );
    
          console.log("[SERVER] Connected with {info like port and ip}"); // yeah, but this is the client, not server ig.
        }
    
        send(message) {
          this.ws.send(
            JSON.stringify({
              message,
            })
          );
        }
        //i added an onclick event to the send button
        changechat(chat) {
          cachedmessages = caches.open.chat_window.innerHTML //find chat caches
            .replaceAll("all", cachedmessages);
        }
    
        onMessage(event) {
          if (!this.authenticated) {
            // The server accepted our connection
            this.authenticated = true;
            return;
          }
    
          // Message received
          const data = JSON.parse(event.data.toString());
    
          console.log(`[CLIENT] Recieved message ${data}`);
    
          switch (data.event) {
            case "message":
              // Someone sent us a message!
              /* if has_attachment = true {
                chat_window.append(`<div id="message" class="message">
                        <p class="time">{otherstime}{otherstimezone} | {yourtime}{yourtimezone}</p>
                        <img src="{userpicture}" style="width: 100px; height: auto; border-radius: 50px;">
                        <p id="msgcontent" style="bottom: 55px; left: 5px;">&nbsp;&nbsp;{message_data}</p>
                    </div>`)
              };
    
              else has_attachment = false {
                chat_window.append(`<div id="message" class="message">
                        <p class="time">{otherstime}{otherstimezone} | {yourtime}{yourtimezone}</p>
                        <img src="{userpicture}" style="width: 100px; height: auto; border-radius: 50px;">
                        <p id="msgcontent" style="bottom: 55px; left: 5px;">&nbsp;&nbsp;{message_data}</p>
                        <a href="attachmentlink" download="smth" style="display: block;">{attachment}</a>
                    </div>`)
              };
              
              /* help ? */
    /* Here we will send message (attachment system later) It will fetch times and timezone and msg content
              ect ect and add it to the div. then it will add the div to the chat window
              chat_window.break;
    
            case "status_change":
              break;
    
            case "...":
              break;
    
            default:
              console.log(`[CLIENT] Received an invalid event ${data.even}`);
          }
        }
    
        onClosed(event) {
          // Connection closed
          console.log("[SERVER] Connection Cut");
        }
    
        onError(error) {
          console.log(`[CLIENT] Error: ${error}`);
        }
    
        // onErrorServer(error) {
        //     console.log("[SERVER] Error: {error}")
        // }
    
        connect() {
          this.ws = new WebSocket(this.api);
          this.ws.addEventListener("open", this.onOpen);
          this.ws.addEventListener("message", this.onMessage);
          this.ws.addEventListener("close", this.onClosed);
          this.ws.addEventListener("error", this.onError);
        }
      }
    
      const client = new Client("wss://api.extragon.cloud/v2/oscario_chat_client/");
      client.connect();
    });
    
    Yo you online??????????
    */